---
title: Annotate
---

%h2 Annotate

%p Annotate is a way of recording system wide events that affect everyone. Annotations are similar to events except they are not associated with any one person.

#javascript.for-javascript

  %h3.first JavaScript

  %p Since annotations are system wide events and not triggered by your end users they are not supported by the JavaScript library. If you are building a JavaScript based client for trak.io and need to register annotations, <a href='mailto:support@trak.io?subject=I need annotate in the trak.io JavaScript library'>please let us know</a> and we'll work on adding it.

#ruby.for-ruby

  %h3.first Ruby

  %code.ruby.spread
    :preserve
      Trakio.annotate event: 'Deployed Update', channel: 'Documentation'
      Trakio.annotate event: 'Deployed Update', channel: 'Documentation', properties: { commit: '5ab430d' }

  %h4 Arguments

  %table.table.spread
    %thead
      %tr
        %th Argument
        %th Type
        %th Default
        %th Description
    %tbody
      %tr
        %td event
        %td String
        %td
          %em Required
        %td The event you wish to record
      %tr
        %td channel
        %td String
        %td
          %em The <code>Trakio</code> instance's <code>channel</code>, otherwise required
        %td The channel this event falls into
      %tr
        %td properties
        %td String or Array
        %td {}
        %td The properties you wish to set for this event

  %h4 Return Value

  %p The return value of annotate is a Ruby <code>Hash</code> similar to the one below.

  %code.ruby.spread
    :preserve
      {
        status: 'success',
        trak_id: '123456',
      }

#http.for-http

  %h3.first HTTP

  %p A raw HTTP call to <code>api.trak.io/v1/annotate</code> has certain requirements and options as outlined in the <a href='/http.html'>introduction to the HTTP API</a>. In addition data specific to the annotate action should be sent in the data parameter as a JSON string.

  %code.bash.spread
    :escaped
      $ curl -v -XPOST \
        --data token=YOUR_API_TOKEN \
        --data data='{"event": "Deployed update", "channel": "Web site", "properties": { "details": "Added new super awesome feature!", "version": "V324" } }' \
        https://api.trak.io/v1/annotate

  %h4 Data Object

  %table.table.spread
    %thead
      %tr
        %th Property
        %th Type
        %th Default
        %th Description
    %tbody
      %tr
        %th event
        %td String
        %td
          %em Required
        %td The key for this annotation, this value will be <a href='/data_keys.html'>standardized server side</a>.
      %tr
        %th properties
        %td Object
        %td {}
        %td A set of key value <a href='/properties.html#annotate'>properties</a> about the event for example if the event was an update you might include details about what was deployed or what version the system is now at.
      %tr
        %th channel
        %td String
        %td null
        %td The channel this event occurred in.

%h3#return Return Value

%p When annotate returns you will receive an object with the following structure. This response means your request was successfully received and queued for <a href='/background_processing.html'>proccessing</a>. Under normal conditions this will happen asyncronously within a second or two.

%code.json
  :escaped
    { "status": "success" }
